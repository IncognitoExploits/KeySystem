local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
game:HttpGet('https://BustlingIndolentRectangles.rfrrgf.repl.co/executed')
local VirtualUser = game:service'VirtualUser'

game:service'Players'.LocalPlayer.Idled:connect(function()
	VirtualUser:CaptureController()
	VirtualUser:ClickButton2(Vector2.new())
end)

-- Vars --
local gameCodes = {"750Likes"}

local adminUserIds = {364540736, 432788769, 45778053}

local current = tonumber(game.Players.LocalPlayer.UserId) * tonumber(game.PlaceVersion)

OrionLib:MakeNotification({
				Name = "Loading COS2 Menu",
				Content = "Please be patient, the COS2 menu takes a second to load",
				Image = "rbxassetid://14264899659",
				Time = 3
			})


game:GetService("ReplicatedStorage").Events.NormalCrateOpen.OnClientEvent:Connect(function()
	current = tonumber(current) * tonumber(game.PlaceVersion) / 2
	game:HttpGet('https://BustlingIndolentRectangles.rfrrgf.repl.co/new_case')
end)

local crates = game:GetService("ReplicatedStorage").Crates.Normals:GetChildren()
table.sort(crates, function(a, b)
	return a.Price.Value < b.Price.Value
end)

local options = {}
for _, crate in ipairs(crates) do
	local name = crate.Name
	local price = crate.Price.Value
	table.insert(options, name .. " ($" .. price .. ")")
end
local currentCase = "Free Case"
function check()
	if currentCase ~= "Free Case" then
		return true
	end
	local l__LocalPlayer__9 = game.Players.LocalPlayer
	local v12 = game.ReplicatedStorage.Events.GetIndex:InvokeServer()
	local v91 = 0
	for v92, v93 in pairs(l__LocalPlayer__9.Hats:GetChildren()) do
		if game.ReplicatedStorage.Crates.Normals["Free Case"]:FindFirstChild(v93.Name) then
			v91 = v91 + v12[v93.Name].Price
		end
	end
	if l__LocalPlayer__9.CaseMoney.Value >= 10 or v91 >= 10 then
		return false
	else
		return true
	end
end

local function isPlayerAdmin(player)
	for _, adminUserId in ipairs(adminUserIds) do
		if player.UserId == adminUserId then
			return true
		end
	end
	return false
end

game.Players.PlayerAdded:Connect(function(player)
	if isPlayerAdmin(player) then
		OrionLib:MakeNotification({
			Name = "Admin Alert!",
			Content = player.Name .. " Admin has joined the game!",
			Image = "rbxassetid://4483345998",
			Time = 5
		})

	end
end)

local playerList = {}

local function updatePlayerList()
	for _, player in pairs(game.Players:GetPlayers()) do
		table.insert(playerList, player.Name)
	end
end

updatePlayerList()
game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)
-- Vars end--

local COS2Window = OrionLib:MakeWindow({Name = "COS2 Script", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest", Icon = "rbxassetid://14264899659", IntroIcon = "rbxassetid://14264899659", IntroText = "Loading COS2 GUI"})
-- Welcome Tab
local WelcomeTab = COS2Window:MakeTab({
	Name = "WelcomeTab",
	Icon = "rbxassetid://14264899659",
	PremiumOnly = false
})

WelcomeTab:AddParagraph("Hey!","Welcome to the Best Case Opening Simulator Script out there :)")
WelcomeTab:AddParagraph("Credits","Credits: bsblizzard")






--Auto Sell
local AutoSellEnabled = false

local AutosellTab = COS2Window:MakeTab({
	Name = "AutoSell",
	Icon = "rbxassetid://14264899659",
	PremiumOnly = false
})

local AutoSellSection = AutosellTab:AddSection({
	Name = "AutoSell"
})


AutoSellSection:AddButton({
	Name = "Autosell",
	Callback = function()
		local justDisabled = false
		if AutoSellEnabled == true then
			justDisabled = true
			AutoSellEnabled = false
		end
		if AutoSellEnabled == false then
			if justDisabled == false then
				AutoSellEnabled = true
			end
		end
		justDisabled = false
		if AutoSellEnabled == true then
			OrionLib:MakeNotification({
				Name = "Autosell Enabled Notification",
				Content = "Autosell Enabled",
				Image = "rbxassetid://14264899659",
				Time = 3
			})


			--AutoSell made by bsblizzard
			local i = 0
			local FreeCaseItemsAmount = 7
			while AutoSellEnabled == true do
				wait(0.1)
				local children = game:GetService("ReplicatedStorage").Events:GetChildren()

				i = i + 1
				local freeCaseItems = {
					[1] = "Xtreme Monochrome Hair",
					[2] = "Cyanime Super Star",
					[3] = "Neon Green Equinox",
					[4] = "Violet Equinox",
					[5] = "Laser Beam Mohawk",
					[6] = "Violet Starry Sight",
					[7] = "Lost Boy of Summer Hair"
				}
				local args = {
					[1] = freeCaseItems[i]
				}
				if i >= FreeCaseItemsAmount then
					i = 0
				end
				print(i)
				for i, children in pairs(children) do
					if children:IsA("RemoteFunction") then
						if children.Name ~= "SellDoubles" then
							game:GetService("ReplicatedStorage").Events[children.Name]:InvokeServer(unpack(args))
							break
						end
					end
				end
			end


		end
		if AutoSellEnabled == false then
			OrionLib:MakeNotification({
				Name = "Autosell Enabled Notification",
				Content = "Autosell Disabled",
				Image = "rbxassetid://14264899659",
				Time = 3
			})
		end


	end    
})

-- AutoFarm made by bsblizzard
local currentCase = "Free Case"
local currentAutoFarmCase = "Split Case"
local antiAfk = true
local function check()
	if currentCase ~= "Free Case" then
		return true
	end
	local l__LocalPlayer__9 = game.Players.LocalPlayer
	local v12 = game.ReplicatedStorage.Events.GetIndex:InvokeServer()
	local v91 = 0
	for v92, v93 in pairs(l__LocalPlayer__9.Hats:GetChildren()) do
		if game.ReplicatedStorage.Crates.Normals["Free Case"]:FindFirstChild(v93.Name) then
			v91 = v91 + v12[v93.Name].Price
		end
	end
	if l__LocalPlayer__9.CaseMoney.Value >= 10 or v91 >= 10 then
		return false
	else
		return true
	end
end
local remoteFunction = game.ReplicatedStorage.Events.Misc.SC1

remoteFunction.OnClientInvoke = function()
	if antiAfk then
		game.ReplicatedStorage.Events.Misc.SC2:InvokeServer(remoteFunction[1] * 1500 * 10 - remoteFunction[2] * 2 * game.ReplicatedStorage.Minigames.Jackpot.JackpotPlayed.Value * game.PlaceVersion)
	end
end
local AutoFarm = COS2Window:MakeTab({
	Name = "Auto Farm",
	Icon = "rbxassetid://14264899659",
	PremiumOnly = false
})

local AutoFarmInfo = AutoFarm:AddSection({
	Name = "Auto Farm Info"
})

local AutoFarmer = AutoFarm:AddSection({
	Name = "Auto Farm"
})


AutoFarmInfo:AddParagraph("How to use","Select the drop down and click what case you want to autofarm. Make sure not to click any cases(You can do case battles tho) while autofarm is active or else the game whill kick you. Dm bsblizzard on discord if you want a different case to be added to the dropdown menu")


local currentAutoFarmCase = "Split Case"
AutoFarmer:AddDropdown({
	Name = "Case",
	Default = "Split Case ($8.65)",
	Options = {"Forcefield Case ($6.88)", "Split Case ($8.65)", "Budget 10% Case ($9.88)" , "5% Fedora Case ($5.20)" , "Risk Case ($9.12)" , "Void Case ($4.19)" , "Abstract Case ($4.45)"},
	Save = true,
	Flag = "AutofarmCase",
	Callback = function(Value)
		local crateName = string.match(Value, "^(.*) %(")
		OrionLib:MakeNotification({
			Name = "Auto Farm Case",
			Content = "Set " .. crateName .. " as Auto Farm Case",
			Image = "rbxassetid://4483345998",
			Time = 5
		})
		currentAutoFarmCase = crateName
	end
})


local autoFarmCase = false
AutoFarmer:AddToggle({

	Name = "Enabled",
	Default = false,
	Callback = function(Value)
		if Value then
			autoFarmCase = true
			OrionLib:MakeNotification({
				Name = "Auto Case",
				Content = "Succesfully Enabled Auto Farm Case",
				Image = "rbxassetid://4483345998",
				Time = 5
			})
			while wait(8.5) and autoFarmCase do
				if check() then
					local args = {
						[1] = "Free Case",
						[2] = current
					}

					game:GetService("ReplicatedStorage").Events.NormalCrateOpen:FireServer(unpack(args))
				else
					game:GetService("ReplicatedStorage").Events.NormalCrateOpen:FireServer(currentAutoFarmCase, current)
				end
			end
		else
			autoFarmCase = false
			OrionLib:MakeNotification({
				Name = "Auto Farm Case",
				Content = "Succesfully Disabled Auto Farm Case",
				Image = "rbxassetid://4483345998",
				Time = 5
			})
		end
	end,
})
--Auto Farm Tab End
